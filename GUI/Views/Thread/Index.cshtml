@using System.Globalization
@model SD.HnD.Gui.Models.ThreadData

@{
	ViewBag.Title = string.Format("HnD | {0}, Page {1}", Model.Thread.Subject, Model.PageNo);
	
	var nextPageButtonDisabledClass = string.Empty;
	var previousPageButtonDisabledClass = string.Empty;
	if(Model.PageNoNewerMessages <1)
	{
		nextPageButtonDisabledClass = "disabled";
	}
	if(Model.PageNoOlderMessages < 1)
	{
		previousPageButtonDisabledClass = "disabled";
	}
}
<a id="top"></a>
<div class="container">
	<div class="row">
		<div class="col-sm-12 page-header-breadcrumbs">
			<ol class="breadcrumb plr0">
				<li><a href="~/">Home</a></li>
				<li>@Model.SectionName</li>
				<li><a href="~/Forum/@Model.Thread.ForumID/1">@Model.ForumName</a></li>
			</ol>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-12 pt0 mt0">
			<h2 class="br-bottom pt0 mt0 mb0 pb0 subject">@Model.Thread.Subject</h2>
		</div>
	</div>
</div>
@if(Model.UserMayManageSupportQueueContents)
{
	<section class="as">
		<div class="container mt20">
			<div class="row">
				<div class="col-sm-12 as-header">
					Support Queue Management
				</div>
			</div>
			<div class="row as-row">
				<div class="col-sm-12">
					<div class="form-group mb0 mt5">
						@if((Model.SupportQueueThreadInfo != null) && Model.SupportQueueThreadInfo.ClaimedByUserID.HasValue)
						{
							var claimDate = Model.SupportQueueThreadInfo.ClaimedOn ?? DateTime.Now;
							<span class="as-label">
								Claimed by <a href="~/User/@Model.SupportQueueThreadInfo.ClaimedByUserID">@Model.SupportQueueThreadInfo.ClaimedByUser.NickName</a> on
								@claimDate.ToString("dd-MMM-yyyy HH:mm.ss", DateTimeFormatInfo.InvariantInfo)&nbsp;&nbsp;&nbsp;
							</span>
							<a class="btn btn-default mt5 plr20" id="releaseButton" href="~/SupportQueue/ReleaseThread/@Model.Thread.ThreadID/@Model.PageNo"> Release </a>
						}
						else
						{
							<span class="as-label">Not claimed</span>@Html.Raw("&nbsp;&nbsp;&nbsp;")
							if(Model.SupportQueueThreadInfo != null)
							{
								<a class="btn btn-default mt5 plr20" id="claimButton" href="~/SupportQueue/ClaimThread/@Model.Thread.ThreadID/@Model.PageNo"> Claim </a>
							}
						}
						&nbsp;&nbsp;&nbsp;
						<div class="btn-group">
							@if(Model.ActiveQueue == null)
							{
								<button type="button" class="btn btn-default dropdown-toggle mt5" data-toggle="dropdown" aria-expanded="false">
									Not in queue <span class="caret"></span>
								</button>
								<ul class="dropdown-menu menu submenu inpageDropDown" role="menu">
									@foreach(var queue in Model.AllSupportQueues)
									{
										<li><a href="~/SupportQueue/MoveToQueue/@queue.QueueID/@Model.Thread.ThreadID/@Model.PageNo">@queue.QueueName</a></li>
									}
								</ul>
							}
							else
							{
								var activeQueue = Model.ActiveQueue;
								<button type="button" class="btn btn-default dropdown-toggle mt5" data-toggle="dropdown" aria-expanded="false">
									@activeQueue.QueueName <span class="caret"></span>
								</button>
								<ul class="dropdown-menu menu submenu inpageDropDown" role="menu">
									<li><a href="~/SupportQueue/MoveToQueue/0/@Model.Thread.ThreadID/@Model.PageNo">No queue</a></li>
									@if(Model.AllSupportQueues.Count > 1)
									{
										<li class="divider"></li>
									}
									@foreach(var queue in Model.AllSupportQueues.Where(q => q.QueueID != activeQueue.QueueID))
									{
										<li><a href="~/SupportQueue/MoveToQueue/@queue.QueueID/@Model.Thread.ThreadID/@Model.PageNo">@queue.QueueName</a></li>
									}
								</ul>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
	<section class="as">
		<div class="container mt20">
			<div class="row">
				<div class="col-sm-12 as-header">
					<a href="#@Html.Raw("MemoContents" + @Model.Thread.ThreadID)" data-toggle="collapse" aria-expanded="true" aria-controls="@Html.Raw("MemoContents" + @Model.Thread.ThreadID)" class="areatoggle fs-tooltip">
						<span class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span>
						<span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>
					</a>
					Memo&nbsp;&nbsp;&nbsp;
					<span class="pull-right">
						<a href="~/SupportQueue/EditMemo/@Model.Thread.ThreadID/@Model.PageNo" title="Edit memo" class="fs-tooltip"><i class="fa fa-pencil"></i></a>
					</span>
				</div>
			</div>
			<div class="row as-row collapse in" id="@Html.Raw("MemoContents" + @Model.Thread.ThreadID)">
				<div class="col-sm-12">@Html.Raw(Model.MemoAsHTML)</div>
			</div>
		</div>
	</section>
}

<section class="fs mt20">
	<div class="container">
		<div class="row">
			<div class="col-sm-12 fs-header">
				<div class="container">
					<div class="row">
						<div class="col-sm-8 p0">
							<div class="fs-thread-header">
								<span class="plr7">Posts</span>&nbsp;&nbsp;&nbsp;
							</div>
							<div class="fs-thread-pager">@Html.Partial("MessagePager", Model)</div>
						</div>
						<div class="col-sm-4">
							<div class="threadtools pull-right">
								@if(Model.UserMayDoForumSpecificThreadManagement || Model.UserMayDoSystemWideThreadManagement)
								{
									<div class="btn-group">
										<a href="#" class="fs-tooltip dropdown-toggle" data-toggle="dropdown" aria-expanded="false" title="Thread options">
											<span class="glyphicon glyphicon-cog" aria-hidden="true"></span>
										</a>&nbsp;
										<ul class="dropdown-menu menu submenu inpageDropDown" role="menu">
											@if(Model.UserMayDoSystemWideThreadManagement)
											{
												<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Move thread</a></li>
												<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Delete thread</a></li>
											}
											@if(!Model.Thread.IsClosed && Model.UserMayAddNewMessages)
											{
												<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Lock thread</a></li>
											}
											<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Edit thread properties</a></li>
										</ul>
									</div>
								}
								@if(Model.UserMayMarkThreadAsDone)
								{
									string dimmedClass = Model.Thread.MarkedAsDone ? string.Empty : "dimmed";
									<a href="~/Thread/ToggleMarkAsDone/@Model.Thread.ThreadID/@Model.PageNo" class="fs-tooltip @dimmedClass" title="Mark thread as done"><i class="fa fa-check"></i></a>@Html.Raw("&nbsp; &nbsp;")
								}
								else
								{
									<i class="fa fa-check @if(!Model.Thread.MarkedAsDone)
									                      {
										                      @Html.Raw("dimmed")
									                      }"></i>@Html.Raw("&nbsp; &nbsp;")
								}
								@if(Model.UserMayDoBasicThreadOperations)
								{
									string subscribedDimmedClass = Model.ThreadIsSubscribed ? string.Empty : "dimmed";
									string bookmarkedDimmedClass = Model.ThreadIsBookmarked ? string.Empty : "dimmed";
									<a href="~/Thread/ToggleSubscribe/@Model.Thread.ThreadID/@Model.PageNo" class="fs-tooltip @subscribedDimmedClass" title="Notify me of thread replies"><i class="fa fa-envelope-o"></i></a>@Html.Raw("&nbsp; &nbsp;")
									<a href="~/Thread/ToggleBookmark/@Model.Thread.ThreadID/@Model.PageNo" class="fs-tooltip @bookmarkedDimmedClass" title="Bookmark thread"><i class="fa fa-bookmark"></i></a>@Html.Raw("&nbsp; &nbsp;")
								}
								@if(Model.UserMayAddNewMessages)
								{
									<a href="#" class="fs-tooltip" title="New post"><i class="fa fa-plus"></i></a>@Html.Raw("&nbsp;")
								}
								<br class="clear"/>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		@for(int i = 0; i < Model.ThreadMessages.Count; i++)
		{
			var currentMessage = Model.ThreadMessages[i];
			<a id="@currentMessage.MessageID"></a>
			<div class="row ps">
				<div class="col-sm-12 plr0">
					<div class="ps-poster" id="@Html.Raw("MessagePoster" + currentMessage.MessageID)">
						@if(!string.IsNullOrWhiteSpace(currentMessage.IconURL))
						{
							var fullURL = "http://" + currentMessage.IconURL;
							<img src="@fullURL" class="ps-poster-avatar" alt="@currentMessage.NickName avatar" />
						}
						<div class="ps-poster-name">
							<a href="~/User/@currentMessage.UserID">@currentMessage.NickName</a><br />
							<span class="ps-poster-title">@currentMessage.UserTitleDescription</span>
						</div>
						<div class="ps-poster-stats">
							<span class="ps-poster-info"><b>Posts:</b> @currentMessage.AmountOfPostings</span><br />
							@if(currentMessage.JoinDate.HasValue)
							{
								<span class="ps-poster-info"><b>Joined:</b> @currentMessage.JoinDate.Value.ToString("dd-MMM-yyyy")</span>
								<br />
							}
							@if(Model.ShowIPAddresses)
							{
								<span class="ps-poster-info"><b>IP:</b> @currentMessage.PostedFromIP</span>
							}
						</div>
					</div>
					<div class="ps-message">
						<div class="ps-message-title">
							<div class="pull-left">
								<a href="~/Message/@currentMessage.ThreadID/@currentMessage.MessageID">#</a> Posted on: @currentMessage.PostingDate.ToString("dd-MMM-yyyy HH:mm:ss")&nbsp;&nbsp;&nbsp;
								@if(Model.ShowDeleteMessageLink && ((Model.PageNo > 1) || (i > 0)))
								{
									<a href="#" data-toggle="modal" data-target="#confirmMessageDeleteModal" data-messageid="@currentMessage.MessageID" title="Delete post"><i class="fa fa-trash-o"></i></a>@Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
								}
							</div>
							<div class="ps-message-tools">
								@if(currentMessage.NumberOfAttachments > 0)
								{
									<a href="#" title="View Attachments"><span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span></a>@Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
								}
								@if(Model.ForumAllowsAttachments && Model.UserMayAddAttachments && (LoggedInUserAdapter.GetUserID() == currentMessage.UserID))
								{
									<a href="#" title="Manage Attachments"><span class="glyphicon glyphicon-paperclip" aria-hidden="true"></span></a>@Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
								}
								@if(Model.ShowEditMessageLink || (!LoggedInUserAdapter.IsAnonymousUser() && (currentMessage.UserID == LoggedInUserAdapter.GetUserID())))
								{
									<a href="#" title="Edit post"><i class="fa fa-pencil"></i></a>@Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;")
								}
								@if(Model.ShowQuoteMessageLink)
								{
									<a href="#" title="Quote and reply to post"><i class="fa fa-reply"></i></a>@Html.Raw("&nbsp;&nbsp;&nbsp;")
								}
							</div>
						</div>
						<div class="ps-message-content" id="@Html.Raw("MessageContents" + currentMessage.MessageID)">
							@Html.Raw(@currentMessage.MessageTextAsHTML)
						</div>
						<div class="ps-message-signature">
							@Html.Raw(@currentMessage.SignatureAsHTML)
							<div class="pull-right">
								<a href="#top" title="Go to top of page"><i class="fa fa-arrow-up"></i></a>
							</div>
						</div>
					</div>
				</div>
			</div>
		}

		@if(Model.NumberOfPages > 1)
		{
			<div class="row">
				<div class="col-sm-12 pull-center pt20">
					<a class="btn btn-sm btn-default @previousPageButtonDisabledClass" href="~/Thread/@Model.Thread.ThreadID/@Model.PageNoOlderMessages"><i class="fa fa-arrow-left"></i>&nbsp;&nbsp;Previous page </a>
					<a class="btn btn-sm btn-default @nextPageButtonDisabledClass" href="~/Thread/@Model.Thread.ThreadID/@Model.PageNoNewerMessages"> Next page&nbsp;&nbsp;<i class="fa fa-arrow-right"></i> </a>
				</div>
			</div>
		}
	</div>
</section>

@if(Model.ShowDeleteMessageLink)
{
	<div class="modal fade" id="confirmMessageDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmMessageDeleteModalLabel">
		<div class="row">
			<div class="modal-dialog modal-lg" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
						<h4 class="modal-title" id="confirmMessageDeleteModalLabel">Confirm message delete</h4>
					</div>
					<div class="mb0 pb0">
						<div class="col-sm-12 plr0 ps">
							<div class="ps-poster" id="confirmMessageDeleteModalMessagePoster">
							</div>
							<div class="ps-message">
								<div class="ps-message-content ps-message-modal" id="confirmMessageDeleteModalMessageContents">
								</div>
							</div>
						</div>
					</div>
					<div class="pull-center mb20">
						<a class="btn btn-primary" data-dismiss="modal">&nbsp;&nbsp;Keep&nbsp;&nbsp;</a>&nbsp;&nbsp;
						<a class="btn btn-default" href="~/Message/Delete/" id="confirmMessageDeleteLink"> Delete </a>
					</div>
				</div>
			</div>
		</div>
	</div>
}
@section scripts
{
	<script type="text/javascript">
		$('#confirmMessageDeleteModal').on('show.bs.modal', function (event) {
			var button = $(event.relatedTarget); // Button that triggered the modal
			var messageid = button.data('messageid');
			var modalMessageContentsDiv = document.getElementById('confirmMessageDeleteModalMessageContents');
			modalMessageContentsDiv.innerHTML = document.getElementById('MessageContents' + messageid).innerHTML;
			var modalPosterDiv = document.getElementById('confirmMessageDeleteModalMessagePoster');
			modalPosterDiv.innerHTML = document.getElementById('MessagePoster' + messageid).innerHTML;
			var deleteLink = document.getElementById('confirmMessageDeleteLink');
			deleteLink.setAttribute('href', deleteLink.getAttribute('href') + messageid);
		})
	</script>
}